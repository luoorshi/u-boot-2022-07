make --dry-run --always-make --keep-going --print-directory
make: Entering directory '/home/luoorshi/work/code/h3_h5/u-boot-2022-07'
 
  HOSTCC  scripts/basic/fixdep
 
  HOSTCC  scripts/kconfig/conf.o
 
  YACC    scripts/kconfig/zconf.tab.c
 
  LEX     scripts/kconfig/zconf.lex.c
 
  HOSTCC  scripts/kconfig/zconf.tab.o
 
  HOSTLD  scripts/kconfig/conf
 
scripts/kconfig/conf  --syncconfig Kconfig
 
tools/Kconfig:7: syntax error
tools/Kconfig:6: invalid statement

Recursive inclusion detected.
Inclusion path:
  current file : tools/Kconfig
  included from: tools/Kconfig:583

scripts/kconfig/Makefile:75: recipe for target 'syncconfig' failed
 
make[2]: *** [syncconfig] Error 1
make[1]: *** [syncconfig] Error 2

Makefile:575: recipe for target 'syncconfig' failed
make -f ./scripts/Makefile.autoconf u-boot.cfg
 
make: *** No rule to make target 'include/config/auto.conf', needed by 'include/config/uboot.release'.

scripts/Makefile.autoconf:25: include/config/auto.conf: No such file or directory

make[1]: *** No rule to make target 'include/config/auto.conf'.
make[1]: Failed to remake makefile 'include/config/auto.conf'.
make: *** [u-boot.cfg] Error 2

set -e; mkdir -p include/; 	(echo "/* Automatically generated - do not edit */"; for i in $(echo  | sed 's/,/ /g'); do echo \#define CONFIG_$i | sed '/=/ {s/=/	/;q; } ; { s/$/	1/; }'; done; echo \#define CONFIG_BOARDDIR board/; echo \#include \<config_uncmd_spl.h\>; echo \#include \<configs/.h\>; echo \#include \<asm/config.h\>; echo \#include \<linux/kconfig.h\>; echo \#include \<config_fallbacks.h\>;) < scripts/Makefile.autoconf > include/config.h.tmp; if [ -r include/config.h ] && cmp -s include/config.h include/config.h.tmp; then rm -f include/config.h.tmp; else echo '  UPD     include/config.h'; mv -f include/config.h.tmp include/config.h; fi
echo '  CFG     u-boot.cfg'; gcc -E -Wall -Wstrict-prototypes -Wno-format-security -fno-builtin -ffreestanding -std=gnu11 -fshort-wchar -fno-strict-aliasing -fno-PIE -fno-stack-protector -fno-delete-null-pointer-checks -Wno-pointer-sign   -Wno-array-bounds -Wno-stringop-overflow -Wno-maybe-uninitialized  -g -fstack-usage -Wno-format-nonliteral  -Wno-unused-but-set-variable -Werror=date-time   -D__KERNEL__ -D__UBOOT__    -pipe -Iinclude  -I./arch//include -include ./include/linux/kconfig.h  -nostdinc -isystem /usr/lib/gcc/x86_64-linux-gnu/7/include  -DDO_DEPS_ONLY -dM ./include/common.h > u-boot.cfg.tmp && { grep 'define CONFIG_' u-boot.cfg.tmp | sed '/define CONFIG_IS_ENABLED(/d;/define CONFIG_IF_ENABLED_INT(/d;/define CONFIG_VAL(/d;' > u-boot.cfg; rm u-boot.cfg.tmp; } || { rm u-boot.cfg.tmp; false; }
Makefile:617: recipe for target 'u-boot.cfg' failed
set -e; mkdir -p include/generated/; 	(if test -n "${SOURCE_DATE_EPOCH}"; then SOURCE_DATE="@${SOURCE_DATE_EPOCH}"; DATE=""; for date in gdate date.gnu date; do ${date} -u -d "${SOURCE_DATE}" >/dev/null 2>&1 && DATE="${date}"; done; if test -n "${DATE}"; then LC_ALL=C ${DATE} -u -d "${SOURCE_DATE}" +'#define U_BOOT_DATE "%b %d %C%y"'; LC_ALL=C ${DATE} -u -d "${SOURCE_DATE}" +'#define U_BOOT_TIME "%T"'; LC_ALL=C ${DATE} -u -d "${SOURCE_DATE}" +'#define U_BOOT_TZ "%z"'; LC_ALL=C ${DATE} -u -d "${SOURCE_DATE}" +'#define U_BOOT_EPOCH %s'; else return 42; fi; else LC_ALL=C date +'#define U_BOOT_DATE "%b %d %C%y"'; LC_ALL=C date +'#define U_BOOT_TIME "%T"'; LC_ALL=C date +'#define U_BOOT_TZ "%z"'; LC_ALL=C date +'#define U_BOOT_EPOCH %s'; fi) < Makefile > include/generated/timestamp_autogenerated.h.tmp; if [ -r include/generated/timestamp_autogenerated.h ] && cmp -s include/generated/timestamp_autogenerated.h include/generated/timestamp_autogenerated.h.tmp; then rm -f include/generated/timestamp_autogenerated.h.tmp; else echo '  UPD     include/generated/timestamp_autogenerated.h'; mv -f include/generated/timestamp_autogenerated.h.tmp include/generated/timestamp_autogenerated.h; fi
set -e; mkdir -p include/generated/; 	(if test -n "${DEVICE_TREE}"; then echo \#define DEVICE_TREE \"\"; else echo \#define DEVICE_TREE CONFIG_DEFAULT_DEVICE_TREE; fi) < Makefile > include/generated/dt.h.tmp; if [ -r include/generated/dt.h ] && cmp -s include/generated/dt.h include/generated/dt.h.tmp; then rm -f include/generated/dt.h.tmp; else echo '  UPD     include/generated/dt.h'; mv -f include/generated/dt.h.tmp include/generated/dt.h; fi
echo '  ENVC    include/generated/env.txt'; if [ -f "FORCE" ]; then cat FORCE > include/generated/env.txt; elif [ -n "" ]; then echo "Missing file ./board//.env"; else touch include/generated/env.txt ; fi
echo '  ENVP    include/generated/env.in'; if [ -s "" ]; then gcc -E -P  -x assembler-with-cpp -D__ASSEMBLY__ -D__UBOOT_CONFIG__ -I . -I include -I ./include -include linux/kconfig.h -include include/config.h -I./arch//include include/generated/env.txt -o include/generated/env.in; else rm -f include/generated/env.in; touch include/generated/env.in ; fi
echo '  ENVT    include/generated/environment.h'; awk -f ./scripts/env2string.awk include/generated/env.in >include/generated/environment.h
make -f ./scripts/Makefile.build obj=scripts/basic
 
set -e;  echo '  HOSTCC  scripts/basic/fixdep'; cc -Wp,-MD,scripts/basic/.fixdep.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11      -o scripts/basic/fixdep scripts/basic/fixdep.c   ; scripts/basic/fixdep scripts/basic/.fixdep.d scripts/basic/fixdep 'cc -Wp,-MD,scripts/basic/.fixdep.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11      -o scripts/basic/fixdep scripts/basic/fixdep.c   ' > scripts/basic/.fixdep.tmp; rm -f scripts/basic/.fixdep.d; mv -f scripts/basic/.fixdep.tmp scripts/basic/.fixdep.cmd
 
:
 
rm -f .tmp_quiet_recordmcount
 
if test "./scripts/dtc/dtc" = "./scripts/dtc/dtc"; then \
	make -f ./scripts/Makefile.build obj=scripts/dtc; \
else \
	if ! ./scripts/dtc/dtc -v >/dev/null; then \
		echo '*** Failed to check dtc version: ./scripts/dtc/dtc'; \
		false; \
	else \
		if test "Error: Cannot find dtc: ./scripts/dtc/dtc" -lt 010406; then \
			echo '*** Your dtc is too old, please upgrade to dtc 010406 or newer'; \
			false; \
		else \
			if [ -n "" ]; then \
				if ! echo "import libfdt" | python3 2>/dev/null; then \
					echo '*** pylibfdt does not seem to be available with python3'; \
					false; \
				fi; \
			fi; \
		fi; \
	fi; \
fi
 
set -e;  echo '  HOSTCC  scripts/dtc/dtc.o'; cc -Wp,-MD,scripts/dtc/.dtc.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/dtc.o scripts/dtc/dtc.c; scripts/basic/fixdep scripts/dtc/.dtc.o.d scripts/dtc/dtc.o 'cc -Wp,-MD,scripts/dtc/.dtc.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/dtc.o scripts/dtc/dtc.c' > scripts/dtc/.dtc.o.tmp; rm -f scripts/dtc/.dtc.o.d; mv -f scripts/dtc/.dtc.o.tmp scripts/dtc/.dtc.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/flattree.o'; cc -Wp,-MD,scripts/dtc/.flattree.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/flattree.o scripts/dtc/flattree.c; scripts/basic/fixdep scripts/dtc/.flattree.o.d scripts/dtc/flattree.o 'cc -Wp,-MD,scripts/dtc/.flattree.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/flattree.o scripts/dtc/flattree.c' > scripts/dtc/.flattree.o.tmp; rm -f scripts/dtc/.flattree.o.d; mv -f scripts/dtc/.flattree.o.tmp scripts/dtc/.flattree.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/fstree.o'; cc -Wp,-MD,scripts/dtc/.fstree.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/fstree.o scripts/dtc/fstree.c; scripts/basic/fixdep scripts/dtc/.fstree.o.d scripts/dtc/fstree.o 'cc -Wp,-MD,scripts/dtc/.fstree.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/fstree.o scripts/dtc/fstree.c' > scripts/dtc/.fstree.o.tmp; rm -f scripts/dtc/.fstree.o.d; mv -f scripts/dtc/.fstree.o.tmp scripts/dtc/.fstree.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/data.o'; cc -Wp,-MD,scripts/dtc/.data.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/data.o scripts/dtc/data.c; scripts/basic/fixdep scripts/dtc/.data.o.d scripts/dtc/data.o 'cc -Wp,-MD,scripts/dtc/.data.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/data.o scripts/dtc/data.c' > scripts/dtc/.data.o.tmp; rm -f scripts/dtc/.data.o.d; mv -f scripts/dtc/.data.o.tmp scripts/dtc/.data.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/livetree.o'; cc -Wp,-MD,scripts/dtc/.livetree.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/livetree.o scripts/dtc/livetree.c; scripts/basic/fixdep scripts/dtc/.livetree.o.d scripts/dtc/livetree.o 'cc -Wp,-MD,scripts/dtc/.livetree.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/livetree.o scripts/dtc/livetree.c' > scripts/dtc/.livetree.o.tmp; rm -f scripts/dtc/.livetree.o.d; mv -f scripts/dtc/.livetree.o.tmp scripts/dtc/.livetree.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/treesource.o'; cc -Wp,-MD,scripts/dtc/.treesource.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/treesource.o scripts/dtc/treesource.c; scripts/basic/fixdep scripts/dtc/.treesource.o.d scripts/dtc/treesource.o 'cc -Wp,-MD,scripts/dtc/.treesource.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/treesource.o scripts/dtc/treesource.c' > scripts/dtc/.treesource.o.tmp; rm -f scripts/dtc/.treesource.o.d; mv -f scripts/dtc/.treesource.o.tmp scripts/dtc/.treesource.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/srcpos.o'; cc -Wp,-MD,scripts/dtc/.srcpos.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/srcpos.o scripts/dtc/srcpos.c; scripts/basic/fixdep scripts/dtc/.srcpos.o.d scripts/dtc/srcpos.o 'cc -Wp,-MD,scripts/dtc/.srcpos.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/srcpos.o scripts/dtc/srcpos.c' > scripts/dtc/.srcpos.o.tmp; rm -f scripts/dtc/.srcpos.o.d; mv -f scripts/dtc/.srcpos.o.tmp scripts/dtc/.srcpos.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/checks.o'; cc -Wp,-MD,scripts/dtc/.checks.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/checks.o scripts/dtc/checks.c; scripts/basic/fixdep scripts/dtc/.checks.o.d scripts/dtc/checks.o 'cc -Wp,-MD,scripts/dtc/.checks.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/checks.o scripts/dtc/checks.c' > scripts/dtc/.checks.o.tmp; rm -f scripts/dtc/.checks.o.d; mv -f scripts/dtc/.checks.o.tmp scripts/dtc/.checks.o.cmd
set -e;  echo '  HOSTCC  scripts/dtc/util.o'; cc -Wp,-MD,scripts/dtc/.util.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/util.o scripts/dtc/util.c; scripts/basic/fixdep scripts/dtc/.util.o.d scripts/dtc/util.o 'cc -Wp,-MD,scripts/dtc/.util.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt  -c -o scripts/dtc/util.o scripts/dtc/util.c' > scripts/dtc/.util.o.tmp; rm -f scripts/dtc/.util.o.d; mv -f scripts/dtc/.util.o.tmp scripts/dtc/.util.o.cmd
set -e;  echo '  LEX     scripts/dtc/dtc-lexer.lex.c'; flex -oscripts/dtc/dtc-lexer.lex.c -L scripts/dtc/dtc-lexer.l; printf '%s\n' 'cmd_scripts/dtc/dtc-lexer.lex.c := flex -oscripts/dtc/dtc-lexer.lex.c -L scripts/dtc/dtc-lexer.l' > scripts/dtc/.dtc-lexer.lex.c.cmd
set -e;  echo '  YACC    scripts/dtc/dtc-parser.tab.h'; bison -o/dev/null --defines=scripts/dtc/dtc-parser.tab.h -t -l scripts/dtc/dtc-parser.y; printf '%s\n' 'cmd_scripts/dtc/dtc-parser.tab.h := bison -o/dev/null --defines=scripts/dtc/dtc-parser.tab.h -t -l scripts/dtc/dtc-parser.y' > scripts/dtc/.dtc-parser.tab.h.cmd
set -e;  echo '  HOSTCC  scripts/dtc/dtc-lexer.lex.o'; cc -Wp,-MD,scripts/dtc/.dtc-lexer.lex.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt -Iscripts/dtc -c -o scripts/dtc/dtc-lexer.lex.o scripts/dtc/dtc-lexer.lex.c; scripts/basic/fixdep scripts/dtc/.dtc-lexer.lex.o.d scripts/dtc/dtc-lexer.lex.o 'cc -Wp,-MD,scripts/dtc/.dtc-lexer.lex.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt -Iscripts/dtc -c -o scripts/dtc/dtc-lexer.lex.o scripts/dtc/dtc-lexer.lex.c' > scripts/dtc/.dtc-lexer.lex.o.tmp; rm -f scripts/dtc/.dtc-lexer.lex.o.d; mv -f scripts/dtc/.dtc-lexer.lex.o.tmp scripts/dtc/.dtc-lexer.lex.o.cmd
set -e;  echo '  YACC    scripts/dtc/dtc-parser.tab.c'; bison -oscripts/dtc/dtc-parser.tab.c -t -l scripts/dtc/dtc-parser.y; printf '%s\n' 'cmd_scripts/dtc/dtc-parser.tab.c := bison -oscripts/dtc/dtc-parser.tab.c -t -l scripts/dtc/dtc-parser.y' > scripts/dtc/.dtc-parser.tab.c.cmd
set -e;  echo '  HOSTCC  scripts/dtc/dtc-parser.tab.o'; cc -Wp,-MD,scripts/dtc/.dtc-parser.tab.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt -Iscripts/dtc -c -o scripts/dtc/dtc-parser.tab.o scripts/dtc/dtc-parser.tab.c; scripts/basic/fixdep scripts/dtc/.dtc-parser.tab.o.d scripts/dtc/dtc-parser.tab.o 'cc -Wp,-MD,scripts/dtc/.dtc-parser.tab.o.d -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer   -std=gnu11    -Iscripts/dtc/libfdt -Iscripts/dtc -c -o scripts/dtc/dtc-parser.tab.o scripts/dtc/dtc-parser.tab.c' > scripts/dtc/.dtc-parser.tab.o.tmp; rm -f scripts/dtc/.dtc-parser.tab.o.d; mv -f scripts/dtc/.dtc-parser.tab.o.tmp scripts/dtc/.dtc-parser.tab.o.cmd
set -e;  echo '  HOSTLD  scripts/dtc/dtc'; cc   -o scripts/dtc/dtc scripts/dtc/dtc.o scripts/dtc/flattree.o scripts/dtc/fstree.o scripts/dtc/data.o scripts/dtc/livetree.o scripts/dtc/treesource.o scripts/dtc/srcpos.o scripts/dtc/checks.o scripts/dtc/util.o scripts/dtc/dtc-lexer.lex.o scripts/dtc/dtc-parser.tab.o   ; printf '%s\n' 'cmd_scripts/dtc/dtc := cc   -o scripts/dtc/dtc scripts/dtc/dtc.o scripts/dtc/flattree.o scripts/dtc/fstree.o scripts/dtc/data.o scripts/dtc/livetree.o scripts/dtc/treesource.o scripts/dtc/srcpos.o scripts/dtc/checks.o scripts/dtc/util.o scripts/dtc/dtc-lexer.lex.o scripts/dtc/dtc-parser.tab.o   ' > scripts/dtc/.dtc.cmd
:
 
make: *** No rule to make target 'arch//cpu/u-boot.lds', needed by 'u-boot.lds'.

touch .binman_stamp
echo >&2 "===================== WARNING ======================"
echo >&2 "This board does not use CONFIG_DM. CONFIG_DM will be"
echo >&2 "compulsory starting with the v2020.01 release."
echo >&2 "Failure to update may result in board removal."
echo >&2 "See doc/develop/driver-model/migration.rst for more info."
echo >&2 "===================================================="
if [ -n "" ]; then if [ "" != "y" ]; then echo >&2 "===================== WARNING ======================"; echo >&2 "This board does not use CONFIG_WDT (Driver Model"; echo >&2 "for DM watchdog). Please update the board to use"; echo >&2 "CONFIG_WDT before the v2019.10 release. Failure to"; echo >&2 "update by the deadline may result in board removal."; echo >&2 "See doc/develop/driver-model/migration.rst for more info."; echo >&2 "===================================================="; fi; fi
if [ -n "" ]; then if [ "" != "y" ]; then echo >&2 "===================== WARNING ======================"; echo >&2 "This board does not use CONFIG_DM_ETH (Driver Model"; echo >&2 "for Ethernet drivers). Please update the board to use"; echo >&2 "CONFIG_DM_ETH before the v2020.07 release. Failure to"; echo >&2 "update by the deadline may result in board removal."; echo >&2 "See doc/develop/driver-model/migration.rst for more info."; echo >&2 "===================================================="; fi; fi
if [ -n "" ]; then if [ "" != "y" ]; then echo >&2 "===================== WARNING ======================"; echo >&2 "This board does not use CONFIG_DM_I2C (Driver Model"; echo >&2 "for I2C drivers). Please update the board to use"; echo >&2 "CONFIG_DM_I2C before the v2022.04 release. Failure to"; echo >&2 "update by the deadline may result in board removal."; echo >&2 "See doc/develop/driver-model/migration.rst for more info."; echo >&2 "===================================================="; fi; fi
if [ -n "" ]; then if [ "" != "y" ]; then echo >&2 "===================== WARNING ======================"; echo >&2 "This board does not use CONFIG_DM_KEYBOARD (Driver Model"; echo >&2 "for Keyboard drivers). Please update the board to use"; echo >&2 "CONFIG_DM_KEYBOARD before the v2022.10 release. Failure to"; echo >&2 "update by the deadline may result in board removal."; echo >&2 "See doc/develop/driver-model/migration.rst for more info."; echo >&2 "===================================================="; fi; fi
# CONFIG_SYS_TIMER_RATE has brackets in it for some boards which
# confuses this rule. Use if() to send just a single character which
# is enable to tell 'deprecated' that one of these symbols exists
if [ -n "" ]; then if [ "" != "y" ]; then echo >&2 "===================== WARNING ======================"; echo >&2 "This board does not use CONFIG_TIMER (Driver Model"; echo >&2 "for Timer drivers). Please update the board to use"; echo >&2 "CONFIG_TIMER before the v2023.01 release. Failure to"; echo >&2 "update by the deadline may result in board removal."; echo >&2 "See doc/develop/driver-model/migration.rst for more info."; echo >&2 "===================================================="; fi; fi
if [ -n "" ]; then if [ "" != "y" ]; then echo >&2 "===================== WARNING ======================"; echo >&2 "This board does not use CONFIG_DM_SERIAL (Driver Model"; echo >&2 "for Serial drivers). Please update the board to use"; echo >&2 "CONFIG_DM_SERIAL before the v2023.04 release. Failure to"; echo >&2 "update by the deadline may result in board removal."; echo >&2 "See doc/develop/driver-model/migration.rst for more info."; echo >&2 "===================================================="; fi; fi
if [ -n "" ]; then if [ "" != "y" ]; then echo >&2 "===================== WARNING ======================"; echo >&2 "This board does not use CONFIG_DM_SCSI (Driver Model"; echo >&2 "for SCSI drivers). Please update the board to use"; echo >&2 "CONFIG_DM_SCSI before the v2023.04 release. Failure to"; echo >&2 "update by the deadline may result in board removal."; echo >&2 "See doc/develop/driver-model/migration.rst for more info."; echo >&2 "===================================================="; fi; fi
# Check that this build does not use CONFIG options that we do not
# know about unless they are in Kconfig. All the existing CONFIG
# options are whitelisted, so new ones should not be added.
echo '  CFGCHK  u-boot.cfg'; ./scripts/check-config.sh u-boot.cfg ./scripts/config_whitelist.txt .
# Check that this build does not override OF_HAS_PRIOR_STAGE by
# disabling OF_BOARD.
echo '  OFCHK   .config'; ./scripts/check-of.sh .config ./scripts/of_allowlist.txt
make: Leaving directory '/home/luoorshi/work/code/h3_h5/u-boot-2022-07'
 
